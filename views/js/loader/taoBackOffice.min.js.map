{"version":3,"sources":["../../taoBackOfficeCss/list!css","../controller/list/index.js","../controller/routes.js","../treeRender.js","../controller/tree/view.js","onLayerEnd0.js","module-create.js"],"names":[],"mappings":"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","sourcesContent":["\ndefine('css!taoBackOfficeCss/list',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 (original work) Open Assessment Technologies SA;\n */\ndefine('taoBackOffice/controller/list/index',[\n    'jquery',\n    'i18n',\n    'util/url',\n    'ui/feedback',\n    'ui/dialog/confirm',\n    'layout/section',\n    'css!taoBackOfficeCss/list'\n], function ($, __, urlUtil, feedback, dialogConfirm, section) {\n    'use strict';\n\n    function addSquareBtn(title, icon, $listToolBar, position='lft') {\n        const $btn = $('<button>', {\n            'class': `btn-info small ${position} icon-${icon}`,\n            title: __(title) }\n        );\n        $listToolBar.append($btn);\n        return $btn;\n    }\n\n    return {\n\n        /**\n         * The list controller entrypoint\n         */\n        start() {\n\n            const saveUrl    = urlUtil.route('saveLists', 'Lists', 'taoBackOffice');\n            const delListUrl = urlUtil.route('removeList', 'Lists', 'taoBackOffice');\n            const delEltUrl  = urlUtil.route('removeListElement', 'Lists', 'taoBackOffice');\n\n            $('.list-edit-btn').click(function () {\n                const $btn = $(this);\n                let uri = $btn.data('uri');\n                const $listContainer = $(`#list-data_${uri}`);\n\n                let $listForm       = $listContainer.find('form');\n                const $listTitleBar = $listContainer.find('.container-title h6');\n                const $listToolBar  = $listContainer.find('.data-container-footer');\n                let $listSaveBtn;\n                let $listNewBtn;\n\n                $btn.addClass('hidden');\n\n                if (!$listForm.length) {\n\n                    $listForm = $('<form>');\n                    $listContainer.wrapInner($listForm);\n                    $listContainer.find('form').append(`<input type='hidden' name='uri' value='${uri}' />`);\n\n                    const $labelEdit = $(`<input type='text' name='label' value=''/>`).val($listTitleBar.text());\n                    $listTitleBar.html($labelEdit);\n\n                    if ($listContainer.find('.list-element').length) {\n                        $listContainer.find('.list-element').replaceWith(function () {\n                            return $(`<input type='text' name='${$(this).attr('id')}' value='' />`).val($(this).text());\n                        });\n                    }\n\n                    const elementList = $listContainer.find('ol');\n                    elementList.addClass('sortable-list');\n                    elementList.find('li').append(`<span class='icon-checkbox-crossed list-element-delete-btn'></span>`);\n\n                    $listSaveBtn = addSquareBtn(__('Save list'), 'save', $listToolBar, 'rgt');\n                    $listSaveBtn.on('click', function () {\n                        $.postJson(\n                            saveUrl,\n                            $(this).closest('form').serializeArray(),\n                            response => {\n                                if (response.saved) {\n                                    feedback().success(__('List saved'));\n                                    section.get('taoBo_list').loadContentBlock(urlUtil.route('index', 'Lists', 'taoBackOffice'));\n                                }else{\n                                    feedback().error(__('List not saved'));\n                                }\n                            }\n                        );\n                        return false;\n                    });\n\n                    $listNewBtn = addSquareBtn('New element', 'add', $listToolBar);\n                    $listNewBtn.click(function () {\n                        var level = $(this).closest('form').find('ol').children().length + 1;\n                        $(this).closest('form')\n                            .find('ol')\n                            .append(`<li id='list-element_${level}'>\n                                <input type='text' name='list-element_${level}_' />\n                                <span class='icon-checkbox-crossed list-element-delete-btn' ></span>\n                            </li>`);\n                        return false;\n                    });\n                }\n\n                $listContainer.on('click', '.list-element-delete-btn', function () {\n                    const $element = $(this).parent();\n                    const $input   = $element.find('input:text');\n                    const eltUri   = $input.attr('name').replace(/^list-element_([0-9]*)_/, '');\n\n                    const deleteLocalElement = () => {\n                        $element.remove();\n                        feedback().success(__('Element deleted'));\n                    };\n\n                    const deleteServerAndLocalElement = () => {\n                        $.postJson(\n                            delEltUrl,\n                            { uri : eltUri },\n                            response => {\n                                if (response.deleted) {\n                                    deleteLocalElement();\n                                } else {\n                                    feedback().error(__('Element not deleted'));\n                                }\n                            }\n                        );\n                    };\n\n                    const deleteElement = () => {\n                        if (eltUri) {\n                            deleteServerAndLocalElement();\n                        } else {\n                            deleteLocalElement();\n                        }\n                    };\n\n                    if ($input.val() === '') {\n                        deleteElement();\n                    } else {\n                        dialogConfirm(\n                            __('Please confirm you want to delete this list element.'),\n                            deleteElement\n                        );\n                    }\n                });\n            });\n\n            $('.list-delete-btn').click(function () {\n                const $btn  = $(this);\n                dialogConfirm(\n                    __('Please confirm you want to delete this list. This operation cannot be undone.'),\n                    function accept() {\n                        const uri   = $btn.data('uri');\n                        const $list = $btn.parents('.data-container');\n                        $.postJson(\n                            delListUrl,\n                            { uri },\n                            response => {\n                                if (response.deleted) {\n                                    feedback().success(__('List deleted'));\n                                    $list.remove();\n                                } else {\n                                    feedback().error(__('List not deleted'));\n                                }\n                            }\n                        );\n                    }\n                );\n            });\n        }\n    };\n});\n\n","define('taoBackOffice/controller/routes',[],function () {\n    'use strict';\n\n    return {\n        'Lists' : {\n            'actions' : {\n                'index' : 'controller/list/index'\n            }\n        },\n        'Trees': {\n            'actions': {\n                'viewTree': 'controller/tree/view'\n            }\n        }\n    };\n});\n\n","define('taoBackOffice/treeRender',[\n    'jquery',\n    'lodash',\n    'taoBackOffice/lib/vis/vis',\n    'css!taoBackOffice/lib/vis/vis'\n], function ($, _, vis) {\n    'use strict';\n\n    var network = null;\n    var treeContainer = null;\n    var settings = null;\n    var data = null;\n\n    /**\n     * @private\n     */\n    function destroy() {\n        if (network !== null) {\n            network.destroy();\n            network = null;\n        }\n    }\n\n    var treeRender = {\n\n        /**\n         *\n         * @param {Element} container\n         * @param {Object} [treeData]\n         * @param {Object} [options]\n         */\n        init: function (container, treeData, options) {\n\n            if (!container instanceof Element) {\n                throw new TypeError(\"tree container must be specified\");\n            }\n\n            treeContainer = container;\n            options = options || {};\n            treeData = treeData || {nodes: [], edges: []};\n\n\n            settings = {\n                layout: {\n                    hierarchical: {\n                        sortMethod: 'directed',\n                        \"levelSeparation\": 200\n                    }\n                },\n                nodes: {\n                    shape: 'box',\n                    \"color\": {\n                        \"border\": \"#222\",\n                        \"background\": \"#f2f0ee\",\n\n                        \"highlight\": {\n                            \"border\": \"#222\",\n                            \"background\": \"#f2f0ee\"\n                        }\n                    },\n\n                    \"font\": {\n                        \"face\": \"'Franklin Gothic', 'Franklin Gothic Medium', 'Source Sans Pro', sans-serif\",\n                        \"color\": \"#222\"\n                    }\n\n                },\n                edges: {\n                    smooth: false,\n                    width: 0.2,\n                    color: {\n                        color: \"#222\"\n                    },\n                    arrows: {to: true},\n                    \"physics\": false,\n                    \"scaling\": {\n                        \"label\": false\n                    }\n                }\n            };\n\n            $.extend(settings, options);\n\n            // create a network\n            data = {\n                nodes: treeData.nodes ? treeData.nodes : [],\n                edges: treeData.edges ? treeData.edges : []\n            };\n\n        },\n\n        run: function () {\n            destroy();\n\n            network = new vis.Network(treeContainer, data, settings);\n\n            network.once('initRedraw', function () {\n\n                if (data.nodes.length > 100) {\n                    network.setOptions($.extend(settings, {\n                        physics: {\n                            hierarchicalRepulsion: {\n                                nodeDistance: 200\n                            },\n                            stabilization: {\n                                fit: false\n                            }\n                        }\n                    }));\n\n                    network.fit({\n                        nodes: [data.nodes[0].id, data.nodes[1].id], animation: {\n                            duration: 400,\n                            easingFunction: 'linear'\n                        }\n                    });\n                }\n\n            });\n        }\n    };\n\n    return treeRender;\n});\n\n","define('taoBackOffice/controller/tree/view',[\n    'layout/actions/binder',\n    'uri',\n    'jquery',\n    'context',\n    'helpers',\n    'taoBackOffice/treeRender'\n], function (binder, uri, $, context, helpers, treeRender) {\n    'use strict';\n\n    /**\n     *\n     * @type {{start: Function}}\n     */\n    var itemRunnerController = {\n\n        //the controller initialization\n        start: function () {\n        \t\n        \t$('.tree-container').each(function(i, obj) {\n        \t\tvar $container = $(obj);\n                var uri = $container.data('id');\n\n                $.post(helpers._url('getTree', 'Trees', 'taoBackOffice'), {uri: uri}, function (treeData) {\n\n                    var $parent = $container.closest('.content-block');\n\n                    var resizeContainer = function () {\n                        $container.height($parent.height() - $parent.find('.panel').eq(0).outerHeight());\n                        $container.width($parent.width());\n                    };\n\n                    $(window).on('resize', resizeContainer);\n\n                    resizeContainer();\n                    treeRender.init($container[0], treeData);\n                    treeRender.run();\n\n                });\n        \t});\n        }\n    };\n\n    // the controller is exposed\n    return itemRunnerController;\n});\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('.list-container .list-element-delete-btn{cursor:pointer}\\n\\n/*# sourceMappingURL=list.css.map */');\n","\ndefine(\"taoBackOffice/loader/taoBackOffice.bundle\", function(){});\n"]}