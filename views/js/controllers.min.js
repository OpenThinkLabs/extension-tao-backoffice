define("taoBackOffice/controller/routes",[],function(){return{Lists:{actions:{index:"controller/list/index"}},Trees:{actions:{viewTree:"controller/main/view"}}}}),define("taoBackOffice/controller/list/index",["jquery","i18n","helpers","ui/feedback"],function($,__,helpers,feedback){function _addSquareBtn(title,icon,$listToolBar){var $btn=$("<button>",{"class":"btn-info small lft icon-"+icon,title:__(title)});return $listToolBar.append($btn),$btn}return{start:function(){var saveUrl=helpers._url("saveLists","Lists","taoBackOffice"),delListUrl=helpers._url("removeList","Lists","taoBackOffice"),delEltUrl=helpers._url("removeListElement","Lists","taoBackOffice");$(".list-edit-btn").click(function(){var $listSaveBtn,$listNewBtn,$btn=$(this),uri=$btn.data("uri"),$listContainer=$("#list-data_"+uri),$listForm=$listContainer.find("form"),$listTitleBar=$listContainer.find(".container-title h6"),$listToolBar=$listContainer.find(".data-container-footer");
if(!$listForm.length){$listForm=$("<form>"),$listContainer.wrapInner($listForm),$listContainer.find("form").append('<input type="hidden" name="uri" value="'+uri+'" />');var $labelEdit=$("<input type='text' name='label' value=''/>").val($listTitleBar.text());$listTitleBar.html($labelEdit),$listContainer.find(".list-element").length&&$listContainer.find(".list-element").replaceWith(function(){return $("<input type='text' name='"+$(this).attr("id")+"' value='' />").val($(this).text())});var elementList=$listContainer.find("ol");elementList.addClass("sortable-list"),elementList.find("li").prepend('<span class="icon-grip" ></span>'),elementList.find("li").append('<span class="icon-checkbox-crossed list-element-delete-btn" style="cursor:pointer;" ></span>'),elementList.sortable({axis:"y",opacity:.6,placeholder:"ui-state-error",tolerance:"pointer",update:function(){var map={};
$.each($(this).sortable("toArray"),function(index,id){map[id]="list-element_"+(index+1)}),$(this).find("li").each(function(){var id=$(this).attr("id");if(map[id]){$(this).attr("id",map[id]);var newName=$(this).find("input").attr("name").replace(id,map[id]);$(this).find("input").attr("name",newName)}})}}),$listSaveBtn=_addSquareBtn("Save element","save",$listToolBar),$listSaveBtn.on("click",function(){return $.postJson(saveUrl,$(this).closest("form").serializeArray(),function(response){response.saved?(feedback().success(__('"list saved"')),helpers._load(helpers.getMainContainerSelector(),helpers._url("index","Lists","taoBackOffice"))):feedback().error(__("List not saved"))
}),!1}),$listNewBtn=_addSquareBtn("New element","add",$listToolBar),$listNewBtn.click(function(){var level=$(this).closest("form").find("ol").children().length+1;return $(this).closest("form").find("ol").append("<li id='list-element_"+level+"'><span class='icon-grip' ></span><input type='text' name='list-element_"+level+"_' /><span class='icon-add list-element-delete-btn' ></span></li>"),!1})}$(".list-element-delete-btn").click(function(){var $btn=$(this),uri=$btn.data("uri");if(confirm(__("Please confirm you want to delete this list element."))){var element=$(this).parent();uri=element.find("input:text").attr("name").replace(/^list\-element\_([1-9]*)\_/,""),$.postJson(delEltUrl,{uri:uri},function(response){response.deleted?(element.remove(),feedback().success(__("Element deleted"))):feedback().error(__("Element not deleted"))
})}})}),$(".list-delete-btn").click(function(){if(confirm(__("Please confirm you want to delete this list. This operation cannot be undone."))){var $btn=$(this),uri=$btn.data("uri"),$list=$(this).parents(".data-container");$.postJson(delListUrl,{uri:uri},function(response){response.deleted?(feedback().success(__("List deleted")),$list.remove()):feedback().error(__("List not deleted"))})}})}}}),define("taoBackOffice/treeRender",["jquery","lodash"],function($){function destroy(){null!==network&&(network.destroy(),network=null)}var network=null,treeContainer=null,settings=null,data=null,treeRender={init:function(container,treeData,options){if(!container instanceof Element)throw new TypeError("tree container must be specified");
treeContainer=container,options=options||{},treeData=treeData||{nodes:[],edges:[]},settings={layout:{hierarchical:{sortMethod:"directed"}},nodes:{shape:"box",color:{border:"#222",background:"#f2f0ee",highlight:{border:"#222",background:"#f2f0ee"}},font:{face:"'Franklin Gothic', 'Franklin Gothic Medium', 'Source Sans Pro', sans-serif",color:"#222"}},edges:{smooth:!1,width:.2,color:{color:"#222"},arrows:{to:!0},physics:!1,scaling:{label:!1}}},$.extend(settings,options),data={nodes:treeData.nodes?treeData.nodes:[],edges:treeData.edges?treeData.edges:[]}},run:function(){destroy()}};return treeRender}),define("taoBackOffice/controller/main/view",["layout/actions/binder","uri","jquery","context","helpers","taoBackOffice/treeRender"],function(binder,uri,$,context,helpers,treeRender){var itemRunnerController={start:function(){var $container=$("#tree-container"),uri=$container.data("uri");
$.post(helpers._url("getTree","Trees","taoBackOffice"),{uri:uri},function(treeData){var $parent=$container.closest(".content-block"),resizeContainer=function(){$container.height($parent.height()-$parent.find(".panel").eq(0).outerHeight()),$container.width($parent.width())};$(window).on("resize",resizeContainer),resizeContainer(),treeRender.init($container[0],treeData),treeRender.run()})}};return itemRunnerController});
//# sourceMappingURL=routes.js
//# sourceMappingURL=controllers.min.js.map